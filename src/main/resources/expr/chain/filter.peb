## ===============  chain filter start ===============
## 过滤数据 符合条件则放行
let chain_{{ funcName }} = lambda()->
    {% if isUDF is not null and isUDF == true %}
    let udf = seq.get(filterUDFMap,"{{ udfName }}");
      {{ debug("udf：{}","udf") }}
    let res = {{ udfName }}.filter(udf,event);
    {% else %}
    ## Traditional comparison expression logic
    let res = {{ stateCode }};
    {% endif %}
    if(res){
        {{ debug("filter() 接收数据：{}","event.value") }}
        nextChainData = nil;
        queue.push({% var rawChainQueue %},event);
        return true;
    }
    {% if strict is not null and  strict == true %}
    else {
        {% var chainResult  %} = false;
        queue.clear({% var rawChainQueue %});
        {% if processedChainQueue != nil %}
        queue.clear({% var processedChainQueue %});
        {% endif %}
    }
    {% endif %}
    return false;
end;
## ===============  chain filter  end  ===============
